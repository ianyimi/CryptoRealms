/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import {useTrimeshCollision} from "spacesvr";
import {BufferGeometry} from "three";

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh
    Plane_1: THREE.Mesh
    Plane_2: THREE.Mesh
    Plane_3: THREE.Mesh
  }
  materials: {
    Court: THREE.MeshPhysicalMaterial
    Board: THREE.MeshStandardMaterial
    ['Frame Colour']: THREE.MeshStandardMaterial
    Stand: THREE.MeshStandardMaterial
  }
}

const FILE_URL = "https://d1p3v0j4bqcb21.cloudfront.net/models/court6-1634876179/court6.glb.gz";

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult

  useTrimeshCollision((nodes["Plane"].geometry as BufferGeometry)
    .clone()
    .scale(41.6274, 1, 24.3867)
    .scale(0.5, 0.5, 0.5)
    .translate(-1.21588, -2, 0)
  )
  useTrimeshCollision((nodes["Plane_1"].geometry as BufferGeometry)
    .clone()
    .scale(41.6274, 1, 24.3867)
    .scale(0.5, 0.5, 0.5)
    .translate(-1.21588, -2, 0)
  )
  useTrimeshCollision((nodes["Plane_2"].geometry as BufferGeometry)
    .clone()
    .scale(41.6274, 1, 24.3867)
    .scale(0.5, 0.5, 0.5)
    .translate(-1.21588, -2, 0)
  )
  useTrimeshCollision((nodes["Plane_3"].geometry as BufferGeometry)
    .clone()
    .scale(41.6274, 1, 24.3867)
    .scale(0.5, 0.5, 0.5)
    .translate(-1.21588, -2, 0)
  )

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="AmbientLight" />
        <group name="court6glb">
          <group name="Light" position={[15.3891, 24.7436, -3.4052]} rotation={[1.8901, 0.8806, -2.0452]} />
          <group name="Camera" position={[74.2917, 19.2689, 15.3512]} rotation={[1.5305, 0.2056, -1.3759]} />
          <group name="Court" position={[-2.4588, 0, 0]} scale={[41.6274, 1, 24.3867]}>
            <mesh name="Plane" geometry={nodes.Plane.geometry} material={materials.Court} />
            <mesh name="Plane_1" geometry={nodes.Plane_1.geometry} material={materials.Board} />
            <mesh name="Plane_2" geometry={nodes.Plane_2.geometry} material={materials['Frame Colour']} />
            <mesh name="Plane_3" geometry={nodes.Plane_3.geometry} material={materials.Stand} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(FILE_URL)
