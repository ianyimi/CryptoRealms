/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Shinsekai (https://sketchfab.com/Shinsekai)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/trove-forbidden-spires-dungeon-8b8c1dcce3d6482d881325785b00a2b5
title: Trove: Forbidden Spires Dungeon
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import {useTrimeshCollision} from "spacesvr";
import {BufferGeometry} from "three";

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh
    Object_3: THREE.Mesh
  }
  materials: {
    ['Scene_-_Root']: THREE.MeshStandardMaterial
  }
}

const FILE_URL = "https://d1p3v0j4bqcb21.cloudfront.net/models/trove-1644895390/trove.glb.gz";

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult

  useTrimeshCollision((nodes.Object_2.geometry as BufferGeometry)
    .clone()
    .rotateX(-Math.PI/2)
    .scale(0.5, 0.5, 0.5)
    .translate(0, -10, 0)
  );
  useTrimeshCollision((nodes.Object_3.geometry as BufferGeometry)
    .clone()
    .rotateX(-Math.PI/2)
    .scale(0.5, 0.5, 0.5)
    .translate(0, -10, 0)
  );

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="Geode">
            <mesh name="Object_2" geometry={nodes.Object_2.geometry} material={nodes.Object_2.material} />
            <mesh name="Object_3" geometry={nodes.Object_3.geometry} material={nodes.Object_3.material} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(FILE_URL)
