/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { useTrimeshCollision } from 'spacesvr'
import { BufferGeometry } from 'three'

type GLTFResult = GLTF & {
  nodes: {
    Landscape_B: THREE.Mesh
  }
  materials: {
    Land: THREE.MeshStandardMaterial
  }
}

const FILE_URL = "https://d1p3v0j4bqcb21.cloudfront.net/models/moonscape-1638262172/moonscape.glb.gz";

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult

  // useTrimeshCollision((nodes["Landscape_B"].geometry as BufferGeometry)
  //   .scale(0.01, 0.01, 0.01)
  //   .translate(0, -10, 0)
  // );

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Landscape_B" geometry={nodes.Landscape_B.geometry} material={materials.Land} />
      </group>
    </group>
  )
}

useGLTF.preload(FILE_URL)
