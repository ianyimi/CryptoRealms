/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { useTrimeshCollision } from "spacesvr"
import { BufferGeometry } from "three";

type GLTFResult = GLTF & {
  nodes: {
    way_out_2: THREE.Mesh
    way_out_1: THREE.Mesh
    Wall: THREE.Mesh
    Roof: THREE.Mesh
    Floor: THREE.Mesh
    Top_Caps: THREE.Mesh
  }
  materials: any
}

const FILE_URL = "https://d1p3v0j4bqcb21.cloudfront.net/models/maze2-1641270530/maze2.glb.gz";

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult

  useTrimeshCollision((nodes.Wall.geometry as BufferGeometry)
    .clone()
    .rotateX(Math.PI/2)
    .rotateZ(-Math.PI)
    .scale(0.25, 0.25, 0.25)
    .translate(0, -5, 0)
  )

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Labyrinth_Low_Poly_(1)glb">
          {/*<group name="Help" rotation={[-Math.PI / 2, 0, -Math.PI]}>*/}
          {/*  <mesh name="way_out_2" geometry={nodes.way_out_2.geometry} material={nodes.way_out_2.material} />*/}
          {/*  <mesh name="way_out_1" geometry={nodes.way_out_1.geometry} material={nodes.way_out_1.material} />*/}
          {/*</group>*/}
          <mesh
            name="Wall"
            geometry={nodes.Wall.geometry}
            material={nodes.Wall.material}
            rotation={[-Math.PI / 2, 0, -Math.PI]}
            castShadow
            receiveShadow
          />
          <mesh
            name="Roof"
            geometry={nodes.Roof.geometry}
            material={nodes.Roof.material}
            position={[0, 59.785, 0]}
            rotation={[-Math.PI / 2, 0, -Math.PI]}
            receiveShadow
          />
          <mesh
            name="Floor"
            geometry={nodes.Floor.geometry}
            material={nodes.Floor.material}
            rotation={[-Math.PI / 2, 0, -Math.PI]}
            receiveShadow
          />
          <mesh
            name="Top_Caps"
            geometry={nodes.Top_Caps.geometry}
            material={nodes.Top_Caps.material}
            rotation={[-Math.PI / 2, 0, -Math.PI]}
            receiveShadow
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(FILE_URL)
