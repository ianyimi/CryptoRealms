/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    Cylinder004: THREE.Mesh
    Cylinder004_1: THREE.Mesh
  }
  materials: {
    ['TREE!_BARK1_.002']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/tree4.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Catenary" position={[-20.7264, 20.9549, -9.0286]} />
        <group name="STUMP" position={[28.681, 0.6633, -0.9154]} scale={[1.9396, 1.2546, 1.9396]}>
          <mesh name="Cylinder004" geometry={nodes.Cylinder004.geometry} material={materials['TREE!_BARK1_.002']} />
          <mesh name="Cylinder004_1" geometry={nodes.Cylinder004_1.geometry} material={materials['Material.002']} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/tree4.glb')
