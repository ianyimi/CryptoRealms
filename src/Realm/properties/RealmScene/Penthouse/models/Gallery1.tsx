/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    walls: THREE.Mesh
    stairs: THREE.Mesh
    steel_1: THREE.Mesh
    steel_2: THREE.Mesh
    steel_3: THREE.Mesh
    steel_4: THREE.Mesh
    glass: THREE.Mesh
    paintings_1: THREE.Mesh
    paintings_2: THREE.Mesh
    paintings_3: THREE.Mesh
    paintings_4: THREE.Mesh
    paintings_5: THREE.Mesh
    paintings_6: THREE.Mesh
    paintings_7: THREE.Mesh
    paintings_8: THREE.Mesh
    floor_1: THREE.Mesh
    floor_2: THREE.Mesh
    floor_3: THREE.Mesh
    floor_4: THREE.Mesh
    leaf: THREE.Mesh
    tree: THREE.Mesh
  }
  materials: {
    walls: THREE.MeshStandardMaterial
    stairs: THREE.MeshStandardMaterial
    ['Aluminium Black']: THREE.MeshStandardMaterial
    ['Acrylic Black']: THREE.MeshStandardMaterial
    light: THREE.MeshStandardMaterial
    ['Chrome Clean']: THREE.MeshStandardMaterial
    glass: THREE.MeshStandardMaterial
    ['Carpet Soft Rug Dark Grey Pattern 2']: THREE.MeshStandardMaterial
    floor: THREE.MeshStandardMaterial
    A: THREE.MeshStandardMaterial
    C: THREE.MeshStandardMaterial
    G: THREE.MeshStandardMaterial
    F: THREE.MeshStandardMaterial
    D: THREE.MeshStandardMaterial
    E: THREE.MeshStandardMaterial
    ['Floor Satin']: THREE.MeshStandardMaterial
    Plaster: THREE.MeshStandardMaterial
    Grassblade: THREE.MeshStandardMaterial
    Soil: THREE.MeshStandardMaterial
    leaf: THREE.MeshStandardMaterial
    tree_b: THREE.MeshStandardMaterial
  }
}

const FILE_URL = "https://d1p3v0j4bqcb21.cloudfront.net/models/gallery1-1638320850/gallery1.glb.gz";

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="galleryglb">
          <group name="RootNode">
            <group name="walls_$AssimpFbx$_Translation" position={[-12.4287, 0, 12.3801]}>
              <group name="walls_$AssimpFbx$_PreRotation" rotation={[-Math.PI / 2, 0, 0]}>
                <mesh name="walls" geometry={nodes.walls.geometry} material={materials.walls} />
              </group>
            </group>
            <group name="stairs_$AssimpFbx$_Translation" position={[-24.524, 0, 12.3801]}>
              <group name="stairs_$AssimpFbx$_PreRotation" rotation={[-Math.PI / 2, 0, 0]}>
                <mesh name="stairs" geometry={nodes.stairs.geometry} material={materials.stairs} />
              </group>
            </group>
            <group name="Plane003_$AssimpFbx$_Translation" position={[184.4217, 148.879, 12.3801]}>
              <group name="Plane003_$AssimpFbx$_PreRotation" rotation={[-Math.PI / 2, 0, 0]}>
                <group name="Plane003" />
              </group>
            </group>
            <group name="steel_$AssimpFbx$_Translation" position={[184.4219, 149.8633, 12.3801]}>
              <group name="steel_$AssimpFbx$_PreRotation" rotation={[-Math.PI / 2, 0, 0]}>
                <group name="steel">
                  <mesh name="steel_1" geometry={nodes.steel_1.geometry} material={materials['Aluminium Black']} />
                  <mesh name="steel_2" geometry={nodes.steel_2.geometry} material={materials['Acrylic Black']} />
                  <mesh name="steel_3" geometry={nodes.steel_3.geometry} material={materials.light} />
                  <mesh name="steel_4" geometry={nodes.steel_4.geometry} material={materials['Chrome Clean']} />
                </group>
              </group>
            </group>
            <group name="glass_$AssimpFbx$_Translation" position={[181.4691, 75.4238, 100.7167]}>
              <group name="glass_$AssimpFbx$_PreRotation" rotation={[-Math.PI / 2, 0, 0]}>
                <mesh name="glass" geometry={nodes.glass.geometry} material={materials.glass} />
              </group>
            </group>
            <group name="paintings_$AssimpFbx$_Translation" position={[-61.3927, 64.0844, -105.7301]}>
              <group name="paintings_$AssimpFbx$_PreRotation" rotation={[-Math.PI / 2, 0, 0]}>
                <group name="paintings">
                  <mesh
                    name="paintings_1"
                    geometry={nodes.paintings_1.geometry}
                    material={materials['Carpet Soft Rug Dark Grey Pattern 2']}
                  />
                  <mesh name="paintings_2" geometry={nodes.paintings_2.geometry} material={materials.floor} />
                  <mesh name="paintings_3" geometry={nodes.paintings_3.geometry} material={materials.A} />
                  <mesh name="paintings_4" geometry={nodes.paintings_4.geometry} material={materials.C} />
                  <mesh name="paintings_5" geometry={nodes.paintings_5.geometry} material={materials.G} />
                  <mesh name="paintings_6" geometry={nodes.paintings_6.geometry} material={materials.F} />
                  <mesh name="paintings_7" geometry={nodes.paintings_7.geometry} material={materials.D} />
                  <mesh name="paintings_8" geometry={nodes.paintings_8.geometry} material={materials.E} />
                </group>
              </group>
            </group>
            <group name="floor_$AssimpFbx$_Translation" position={[-12.4287, 0, 12.3801]}>
              <group name="floor_$AssimpFbx$_PreRotation" rotation={[-Math.PI / 2, 0, 0]}>
                <group name="floor">
                  <mesh name="floor_1" geometry={nodes.floor_1.geometry} material={materials['Floor Satin']} />
                  <mesh name="floor_2" geometry={nodes.floor_2.geometry} material={materials.Plaster} />
                  <mesh name="floor_3" geometry={nodes.floor_3.geometry} material={materials.Grassblade} />
                  <mesh name="floor_4" geometry={nodes.floor_4.geometry} material={materials.Soil} />
                </group>
              </group>
            </group>
            <group name="leaf_$AssimpFbx$_Translation" position={[-20.3509, 0, 13.0687]}>
              <group name="leaf_$AssimpFbx$_PreRotation" rotation={[-Math.PI / 2, 0, 0]}>
                <mesh name="leaf" geometry={nodes.leaf.geometry} material={materials.leaf} />
              </group>
            </group>
            <group name="tree_$AssimpFbx$_Translation" position={[-20.3509, 0, 13.0687]}>
              <group name="tree_$AssimpFbx$_PreRotation" rotation={[-Math.PI / 2, 0, 0]}>
                <group name="tree_$AssimpFbx$_Rotation" rotation={[Math.PI / 2, -1.2217, 0]}>
                  <group name="tree_$AssimpFbx$_Scaling" scale={0.3937}>
                    <mesh name="tree" geometry={nodes.tree.geometry} material={materials.tree_b} />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(FILE_URL)
