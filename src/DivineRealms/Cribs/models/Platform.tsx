/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, {useEffect, useMemo, useRef} from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import {useTrimeshCollision} from "spacesvr";
import {BufferGeometry, Euler, Vector3} from "three";

type GLTFResult = GLTF & {
  nodes: {
    ['new_space_zay2-0']: THREE.Mesh
    ['new_space_zay2-1']: THREE.Mesh
    ['new_space_zay2-2']: THREE.Mesh
    ['new_space_zay2-3']: THREE.Mesh
    ['new_space_zay2-4']: THREE.Mesh
    ['new_space_zay2-5']: THREE.Mesh
    ['new_space_zay2-6']: THREE.Mesh
    ['new_space_zay2-11']: THREE.Mesh
    ['new_space_zay2-7']: THREE.Mesh
    ['new_space_zay2-8']: THREE.Mesh
    ['new_space_zay2-9']: THREE.Mesh
    ['new_space_zay2-10']: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
    ['Material.007']: THREE.MeshStandardMaterial
    ['Material.012']: THREE.MeshStandardMaterial
    ['Material.008']: THREE.MeshStandardMaterial
    ['Material.009']: THREE.MeshStandardMaterial
    ['Material.011']: THREE.MeshStandardMaterial
    ['Material.010']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.006']: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
  }
}

const FILE_URL = "https://d1p3v0j4bqcb21.cloudfront.net/models/platform-1647844423/platform.glb.gz";

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { position = new Vector3(), rotation = new Euler(), scale = 1 } = props
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult

  console.log(position)

  // useEffect(() => {
  //   nodes[`new_space_zay2-0`].scale.set(20, 20, 20)
  // }, [nodes[`new_space_zay2-0`]])

  useTrimeshCollision((nodes[`new_space_zay2-0`].geometry as BufferGeometry)
    .clone()
    .scale((scale as number), (scale as number), (scale as number))
    // .rotateX((rotation as Euler).x)
    // .rotateY((rotation as Euler).y)
    // .rotateZ((rotation as Euler).z)
    // .translate((position as Vector3).x, (position as Vector3).y, (position as Vector3).z)
    .translate(0, -80, 0)
  );

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="try6glb">
          <mesh
            name="new_space_zay2-0"
            geometry={nodes['new_space_zay2-0'].geometry}
            material={materials['Material.001']}
          />
          <mesh
            name="new_space_zay2-1"
            geometry={nodes['new_space_zay2-1'].geometry}
            material={materials['Material.007']}
          />
          <mesh
            name="new_space_zay2-2"
            geometry={nodes['new_space_zay2-2'].geometry}
            material={materials['Material.012']}
          />
          <mesh
            name="new_space_zay2-3"
            geometry={nodes['new_space_zay2-3'].geometry}
            material={materials['Material.008']}
          />
          <mesh
            name="new_space_zay2-4"
            geometry={nodes['new_space_zay2-4'].geometry}
            material={materials['Material.009']}
          />
          <mesh
            name="new_space_zay2-5"
            geometry={nodes['new_space_zay2-5'].geometry}
            material={materials['Material.011']}
          />
          <mesh
            name="new_space_zay2-6"
            geometry={nodes['new_space_zay2-6'].geometry}
            material={materials['Material.010']}
          />
          <mesh
            name="new_space_zay2-11"
            geometry={nodes['new_space_zay2-11'].geometry}
            material={materials['Material.003']}
          />
          <mesh
            name="new_space_zay2-7"
            geometry={nodes['new_space_zay2-7'].geometry}
            material={materials['Material.002']}
          />
          <mesh
            name="new_space_zay2-8"
            geometry={nodes['new_space_zay2-8'].geometry}
            material={materials['Material.006']}
          />
          <mesh
            name="new_space_zay2-9"
            geometry={nodes['new_space_zay2-9'].geometry}
            material={materials['Material.005']}
          />
          <mesh
            name="new_space_zay2-10"
            geometry={nodes['new_space_zay2-10'].geometry}
            material={materials['Material.004']}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(FILE_URL)
